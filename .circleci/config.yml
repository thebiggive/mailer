version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@7.0.0
  aws-ecs: circleci/aws-ecs@2.2.1
  jira: circleci/jira@1.3.1
  slack: circleci/slack@4.3.3

jobs:
  test: # Also lints first
    docker:
      - image: thebiggive/php:8.1
        auth:
          username: $DOCKER_HUB_USERNAME
          password: $DOCKER_HUB_ACCESS_TOKEN

    steps:
      - checkout

      - restore_cache:
          keys:
            - composer-v3-{{ checksum "composer.lock" }}

      - run: composer install --no-interaction
      - run: cd docs && apt update && apt install -y npm && npm -i swagger-ui-dist

      - save_cache:
          paths:
            - vendor
            - docs/node-modules
          key: composer-v3-{{ checksum "composer.lock" }}

      - run: composer run lint:check

      - run:
          name: Generate OpenAPI spec
          command: composer run docs

      - run: composer run sa:check

      - run: composer run test

      - store_artifacts:
          path: docs

workflows:
  build:
    jobs:
      - test:
          context:
            - docker-hub-creds
            - jira
            - slack
          post-steps:
            - jira/notify:
                job_type: build
                environment_type: development
            - slack/notify:
                event: fail
                template: basic_fail_1

  deploy-staging:
    jobs:
      - test:
          filters:
            branches:
              only:
                - develop
          context:
            - docker-hub-creds
      - aws-ecr/build-and-push-image:
          context:
            - ecs-deploys
          requires:
            - test
          repo: '${AWS_ECR_REPO_NAME}'
          region: AWS_REGION
          tag: 'staging,staging-${CIRCLE_SHA1}'
      - aws-ecs/deploy-service-update:
          context:
            - ecs-deploys
            - slack
          requires:
            - aws-ecr/build-and-push-image
          aws-region: AWS_REGION
          family: 'tbg-staging-${AWS_REGION}-${AWS_ECS_SERVICE_SUFFIX_TASKS}'
          cluster-name: 'tbg-staging-${AWS_REGION}'
          container-image-name-updates: 'container=mailer_tasks,tag=staging-${CIRCLE_SHA1}'
          post-steps:
            - slack/notify:
                event: fail
                template: basic_fail_1
            - slack/notify:
                custom: |
                  {
                    "blocks": [
                      {
                        "type": "section",
                        "fields": [
                          {
                            "type": "mrkdwn",
                            "text": "*Staging: Mailer tasks deployed!*"
                          }
                        ]
                      }
                    ]
                  }
      - aws-ecs/deploy-service-update:
          context:
            - ecs-deploys
            - jira
            - slack
          requires:
            - aws-ecr/build-and-push-image
          aws-region: AWS_REGION
          family: 'tbg-staging-${AWS_REGION}-${AWS_ECS_SERVICE_SUFFIX_WEB}'
          cluster-name: 'tbg-staging-${AWS_REGION}'
          container-image-name-updates: 'container=mailer_web,tag=staging-${CIRCLE_SHA1}'
          post-steps:
            - slack/notify:
                event: fail
                template: basic_fail_1
            - jira/notify:
                job_type: deployment
                environment_type: staging
            - slack/notify:
                custom: |
                  {
                    "blocks": [
                      {
                        "type": "section",
                        "fields": [
                          {
                            "type": "mrkdwn",
                            "text": "*Staging: Mailer web deployed!* All visitors should see the updated app version within 30 minutes."
                          }
                        ]
                      }
                    ]
                  }
  deploy-regression:
    jobs:
      - test:
          filters:
            branches:
              only:
                - develop
          context:
            - docker-hub-creds
      - aws-ecr/build-and-push-image:
          context:
            - ecs-deploys
          requires:
            - test
          repo: '${AWS_ECR_REPO_NAME}'
          region: AWS_REGION
          tag: 'regression,regression-${CIRCLE_SHA1}'
      - aws-ecs/deploy-service-update:
          context:
            - ecs-deploys
            - slack
          requires:
            - aws-ecr/build-and-push-image
          aws-region: AWS_REGION
          family: 'tbg-regression-${AWS_REGION}-${AWS_ECS_SERVICE_SUFFIX_TASKS}'
          cluster-name: 'tbg-regression-${AWS_REGION}'
          container-image-name-updates: 'container=mailer_tasks,tag=regression-${CIRCLE_SHA1}'
          post-steps:
            - slack/notify:
                event: fail
                template: basic_fail_1
            - slack/notify:
                custom: |
                  {
                    "blocks": [
                      {
                        "type": "section",
                        "fields": [
                          {
                            "type": "mrkdwn",
                            "text": "*Regression: Mailer tasks deployed!*"
                          }
                        ]
                      }
                    ]
                  }
      - aws-ecs/deploy-service-update:
          context:
            - ecs-deploys
            - jira
            - slack
          requires:
            - aws-ecr/build-and-push-image
          aws-region: AWS_REGION
          family: 'tbg-regression-${AWS_REGION}-${AWS_ECS_SERVICE_SUFFIX_WEB}'
          cluster-name: 'tbg-regression-${AWS_REGION}'
          container-image-name-updates: 'container=mailer_web,tag=regression-${CIRCLE_SHA1}'
          post-steps:
            - slack/notify:
                event: fail
                template: basic_fail_1
            - jira/notify:
                job_type: deployment
                environment_type: staging
            - slack/notify:
                custom: |
                  {
                    "blocks": [
                      {
                        "type": "section",
                        "fields": [
                          {
                            "type": "mrkdwn",
                            "text": "*Regression: Mailer web deployed!* All visitors should see the updated app version within 30 minutes."
                          }
                        ]
                      }
                    ]
                  }
  deploy-production:
    jobs:
      - test:
          filters:
            branches:
              only:
                - main
          context:
            - docker-hub-creds
      - aws-ecr/build-and-push-image:
          context:
            - ecs-deploys
          requires:
            - test
          repo: '${AWS_ECR_REPO_NAME}'
          region: AWS_REGION
          tag: 'production,production-${CIRCLE_SHA1}'
      - aws-ecs/deploy-service-update:
          context:
            - ecs-deploys
            - slack
          requires:
            - aws-ecr/build-and-push-image
          aws-region: AWS_REGION
          family: 'tbg-production-${AWS_REGION}-${AWS_ECS_SERVICE_SUFFIX_TASKS}'
          cluster-name: 'tbg-production-${AWS_REGION}'
          container-image-name-updates: 'container=mailer_tasks,tag=production-${CIRCLE_SHA1}'
          post-steps:
            - slack/notify:
                event: fail
                template: basic_fail_1
            - slack/notify:
                custom: |
                  {
                    "blocks": [
                      {
                        "type": "section",
                        "fields": [
                          {
                            "type": "mrkdwn",
                            "text": "*Production: Mailer tasks deployed!*"
                          }
                        ]
                      }
                    ]
                  }
      - aws-ecs/deploy-service-update:
          context:
            - ecs-deploys
            - jira
            - slack
          requires:
            - aws-ecr/build-and-push-image
          aws-region: AWS_REGION
          family: 'tbg-production-${AWS_REGION}-${AWS_ECS_SERVICE_SUFFIX_WEB}'
          cluster-name: 'tbg-production-${AWS_REGION}'
          container-image-name-updates: 'container=mailer_web,tag=production-${CIRCLE_SHA1}'
          post-steps:
            - slack/notify:
                event: fail
                template: basic_fail_1
            - jira/notify:
                job_type: deployment
                environment_type: production
            - slack/notify:
                custom: |
                  {
                    "blocks": [
                      {
                        "type": "section",
                        "fields": [
                          {
                            "type": "mrkdwn",
                            "text": "*Production: Mailer web deployed!* All visitors should see the updated app version within 30 minutes."
                          }
                        ]
                      }
                    ]
                  }
